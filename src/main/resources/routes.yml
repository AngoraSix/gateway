spring:
  cloud:
    gateway:
      routes:
        #  CONTRIBUTORS
        - id: contributors_add_attribute_route
          uri: ${configs.api.contributors.baseURL}
          predicates:
            - Path=/contributors/attributes
            - Method=POST
          filters:
            - RewritePath=/${configs.api.contributors.inBasePath}(?<segment>.*), /${configs.api.contributors.outBasePath}/:userId
            - ModifyMethod=PUT
            - ContributorsAdminRequest
            - UserScopedRequest
        - id: contributors_get_contributor
          uri: http://localhost:9081
          predicates:
            - Path=/contributors/{contributorId}
            - Method=GET
          filters:
            - RewritePath=/${configs.api.contributors.inBasePath}/(?<segment>.*), /${configs.api.contributors.outBasePath}/$\{segment}
            - ContributorsAdminRequest
        # PROJECTS CORE
        - id: projectscore_route--get--shallow
          uri: ${configs.api.projects.coreBaseURL}
          predicates:
            - Path=/projects/core/**
            - Method=GET
            - Query=shallow
          filters:
            - RewritePath=/${configs.api.projects.coreInBasePath}(?<segment>.*), /${configs.api.projects.coreOutBasePath}$\{segment}
        - id: projectscore_route--get
          uri: ${configs.api.projects.coreBaseURL}
          predicates:
            - Path=/projects/core/**
            - Method=GET
          filters:
            - RewritePath=/${configs.api.projects.coreInBasePath}(?<segment>.*), /${configs.api.projects.coreOutBasePath}$\{segment}
            - ComposeFieldApi=id,/projects/presentations,projectIds,shallow,projectId,presentations,list
        - id: projectscore_route
          uri: ${configs.api.projects.coreBaseURL}
          predicates:
            - Path=/projects/core
          filters:
            - RewritePath=/${configs.api.projects.coreInBasePath}(?<segment>.*), /${configs.api.projects.coreOutBasePath}$\{segment}
            - AddContributorHeader
        # PROJECTS PRESENTATION
        - id: projectspresentation_route--get--shallow
          uri: ${configs.api.projects.presentationBaseURL}
          predicates:
            - Path=/projects/presentations/**
            - Method=GET
            - Query=shallow
          filters:
            - RewritePath=/${configs.api.projects.presentationInBasePath}(?<segment>.*), /${configs.api.projects.presentationOutBasePath}$\{segment}
        - id: projectspresentation_route--get
          uri: ${configs.api.projects.presentationBaseURL}
          predicates:
            - Path=/projects/presentations/**
            - Method=GET
          filters:
            - RewritePath=/${configs.api.projects.presentationInBasePath}(?<segment>.*), /${configs.api.projects.presentationOutBasePath}$\{segment}
            - ComposeFieldApi=projectId,/projects/core,ids,shallow,id,project
        - id: projectspresentation_route--update
          uri: ${configs.api.projects.presentationBaseURL}
          predicates:
            - Path=/projects/presentations/{projectPresentationId}
            - Method=PUT
          filters:
            - RewritePath=/${configs.api.projects.presentationInBasePath}(?<segment>.*), /${configs.api.projects.presentationOutBasePath}$\{segment}
            - ValidateIsAdmin=projectId
        - id: projectspresentation_route
          uri: ${configs.api.projects.presentationBaseURL}
          predicates:
            - Path=/projects/presentations/**
          filters:
            - RewritePath=/${configs.api.projects.presentationInBasePath}(?<segment>.*), /${configs.api.projects.presentationOutBasePath}$\{segment}
        # MEDIA
        - id: media_route
          uri: ${configs.api.media.baseURL}
          predicates:
            - Path=/media/**
          filters:
            - RewritePath=/${configs.api.media.inBasePath}(?<segment>.*), /${configs.api.media.outBasePath}$\{segment}

