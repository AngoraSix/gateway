spring:
  cloud:
    gateway:
      routes:
        #  CONTRIBUTORS
        - id: contributors_patch_route
          uri: ${configs.api.contributors.baseUrl}
          predicates:
            - Path=/contributors/**
            - Method=PATCH
          filters:
            - RewritePath=/${configs.api.contributors.inBasePath}(?<segment>.*), /${configs.api.contributors.outBasePath}$\{segment}
            - TokenRelay=
        - id: contributors_get_contributor
          uri: ${configs.api.contributors.baseUrl}
          predicates:
            - Path=/contributors/**
            - Method=GET
          filters:
            - RewritePath=/${configs.api.contributors.inBasePath}(?<segment>.*), /${configs.api.contributors.outBasePath}$\{segment}
            - TokenRelay=
        # PROJECTS CORE
        - id: projectscore_route--get--shallow
          uri: ${configs.api.projects.core.baseUrl}
          predicates:
            - Path=/projects/core/**
            - Method=GET
            - Query=shallow
          filters:
            - RewritePath=/${configs.api.projects.core.inBasePath}(?<segment>.*), /${configs.api.projects.core.outBasePath}$\{segment}
        - id: projectscore_route--get
          uri: ${configs.api.projects.core.baseUrl}
          predicates:
            - Path=/projects/core/**
            - Method=GET
          filters:
            - RewritePath=/${configs.api.projects.core.inBasePath}(?<segment>.*), /${configs.api.projects.core.outBasePath}$\{segment}
            - ComposeFieldApi=id,/projects/presentations,projectIds,shallow,projectId,presentations,list
        - id: projects_route--update
          uri: ${configs.api.projects.core.baseUrl}
          predicates:
            - Path=/projects/core/{projectId}
            - Method=PUT
          filters:
            - RewritePath=/${configs.api.projects.core.inBasePath}(?<segment>.*), /${configs.api.projects.core.outBasePath}$\{segment}
            - ValidateIsAdmin=false,false,id
            - SetRequestHeader=Content-Type, application/prs.hal-forms+json
        - id: projectscore_route--post
          uri: ${configs.api.projects.core.baseUrl}
          predicates:
            - Path=/projects/core
            - Method=POST
          filters:
            - SetRequestHeader=Content-Type, application/prs.hal-forms+json
            - RewritePath=/${configs.api.projects.core.inBasePath}(?<segment>.*), /${configs.api.projects.core.outBasePath}$\{segment}
            - TokenRelay=
        - id: projectscore_route
          uri: ${configs.api.projects.core.baseUrl}
          predicates:
            - Path=/projects/core
          filters:
            - RewritePath=/${configs.api.projects.core.inBasePath}(?<segment>.*), /${configs.api.projects.core.outBasePath}$\{segment}
        # PROJECTS PRESENTATION
        - id: projectspresentation_route--get--shallow
          uri: ${configs.api.projects.presentation.baseUrl}
          predicates:
            - Path=/projects/presentations/**
            - Method=GET
            - Query=shallow
          filters:
            - RewritePath=/${configs.api.projects.presentation.inBasePath}(?<segment>.*), /${configs.api.projects.presentation.outBasePath}$\{segment}
        - id: projectspresentation_route--get
          uri: ${configs.api.projects.presentation.baseUrl}
          predicates:
            - Path=/projects/presentations/**
            - Method=GET
          filters:
            - RewritePath=/${configs.api.projects.presentation.inBasePath}(?<segment>.*), /${configs.api.projects.presentation.outBasePath}$\{segment}
            - ComposeFieldApi=projectId,/projects/core,ids,shallow,id,project
            - TokenRelay=
        - id: projectspresentation_route--get-single
          uri: ${configs.api.projects.presentation.baseUrl}
          predicates:
            - Path=/projects/{projectId}/presentations/**
            - Method=GET
          filters:
            - ValidateIsAdmin=true,true
            - RewritePath=/${configs.api.projects.presentation.inProjectBasedPath}(?<segment>.*), /${configs.api.projects.presentation.outBasePath}$\{segment}
            - ComposeFieldApi=projectId,/projects/core,ids,shallow,id,project
        - id: projectspresentation_route--update
          uri: ${configs.api.projects.presentation.baseUrl}
          predicates:
            - Path=/projects/{projectId}/presentations/{projectPresentationId}
            - Method=PUT
          filters:
            - RewritePath=/${configs.api.projects.presentation.inProjectBasedPath}(?<segment>.*), /${configs.api.projects.presentation.outBasePath}$\{segment}
            - SetRequestHeader=Content-Type, application/prs.hal-forms+json
            - ValidateIsAdmin=false,false,projectId
        - id: projectspresentation_route--post
          uri: ${configs.api.projects.presentation.baseUrl}
          predicates:
            - Path=/projects/{projectId}/presentations/**
            - Method=POST
          filters:
              - ValidateIsAdmin
              - SetRequestHeader=Content-Type, application/prs.hal-forms+json
              - RewritePath=/${configs.api.projects.presentation.inProjectBasedPath}(?<segment>.*), /${configs.api.projects.presentation.outBasePath}$\{segment}
        - id: projectspresentation_route
          uri: ${configs.api.projects.presentation.baseUrl}
          predicates:
            - Path=/projects/presentations/**
          filters:
            - RewritePath=/${configs.api.projects.presentation.inBasePath}(?<segment>.*), /${configs.api.projects.presentation.outBasePath}$\{segment}
        # PROJECTS MANAGEMENT
        - id: projectsmanagementcore_route--get--shallow
          uri: ${configs.api.projects.management.baseUrl}
          predicates:
            - Path=/projects/management/**
            - Method=GET
            - Query=shallow
          filters:
            - RewritePath=/${configs.api.projects.management.inBasePath}(?<segment>.*), /${configs.api.projects.management.outBasePath}$\{segment}
        - id: projectsmanagementcore_route--get
          uri: ${configs.api.projects.management.baseUrl}
          predicates:
            - Path=/projects/management/**
            - Method=GET
          filters:
            - RewritePath=/${configs.api.projects.management.inBasePath}(?<segment>.*), /${configs.api.projects.management.outBasePath}$\{segment}
            - ComposeFieldApi=projectId,/projects/core,ids,shallow,id,project
        - id: projectsmanagementcore_route--get-single-by-projectid
          uri: ${configs.api.projects.management.baseUrl}
          predicates:
            - Path=/projects/{projectId}/management
            - Method=GET
          filters:
            - ValidateIsAdmin=true,true
            - RewritePath=/${configs.api.projects.management.inProjectBasedPath}(?<segment>.*), /${configs.api.projects.management.outProjectBasedPath}$\{segment}
            - ComposeFieldApi=projectId,/projects/core,ids,shallow,id,project
        - id: projectsmanagementcore_route--get-single
          uri: ${configs.api.projects.management.baseUrl}
          predicates:
            - Path=/projects/{projectId}/management/**
            - Method=GET
          filters:
            - ValidateIsAdmin=true,true
            - RewritePath=/${configs.api.projects.management.inProjectBasedPath}(?<segment>.*), /${configs.api.projects.management.outBasePath}$\{segment}
            - ComposeFieldApi=projectId,/projects/core,ids,shallow,id,project
        # CLUBS
        - id: clubs_route--get-wellknown-club
          uri: ${configs.api.clubs.baseUrl}
          predicates:
            - Path=/clubs/well-known/{projectId}/{clubType}
            - Method=GET
          filters:
            - ValidateIsAdmin=true,true
            - RewritePath=/clubs(?<segment>.*), /clubs$\{segment}
        - id: clubs_route--get-administered-wellknown-club
          uri: ${configs.api.clubs.baseUrl}
          predicates:
            - Path=/clubs/well-known
            - Method=GET
          filters:
            - ExtractAdminProjects
            - AddQueryParamFromAttribute=${configs.constants.projectIdsAttribute},${configs.internalRoutes.projectsCoreParams.projectIdQueryParam}
            - RewritePath=/clubs(?<segment>.*), /clubs$\{segment}
        - id: clubs_route--patch-wellknown-club
          uri: ${configs.api.clubs.baseUrl}
          predicates:
            - Path=/clubs/well-known/{projectId}/{type}
            - Method=PATCH
          filters:
            - ValidateIsAdmin=true
            - RewritePath=/${configs.api.clubs.inBasePath}(?<segment>.*), /${configs.api.clubs.outBasePath}$\{segment}
        # MEDIA
        - id: media_route
          uri: ${configs.api.media.baseUrl}
          predicates:
            - Path=/media/**
          filters:
            - RewritePath=/${configs.api.media.inBasePath}(?<segment>.*), /${configs.api.media.outBasePath}$\{segment}

